<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE plist PUBLIC "-//Apple//DTD PLIST 1.0//EN" "http://www.apple.com/DTDs/PropertyList-1.0.dtd">
<plist version="1.0">
<dict>
	<key>fileTypes</key>
	<array>
		<string>fql</string>
	</array>
	<key>name</key>
	<string>fql</string>
	<key>patterns</key>
	<array>
		<dict>
			<key>match</key>
			<string>(?<![\w\d.])0[xX][0-9A-Fa-f]+(?![pPeE.0-9])</string>
			<key>name</key>
			<string>constant.numeric.integer.hexadecimal.fql</string>
		</dict>
		<dict>
			<key>match</key>
			<string>(?<![\w\d.])0[xX][0-9A-Fa-f]+(\.[0-9A-Fa-f]+)?([eE]-?\d*)?([pP][-+]\d+)?</string>
			<key>name</key>
			<string>constant.numeric.float.hexadecimal.fql</string>
		</dict>
		<dict>
			<key>match</key>
			<string>(?<![\w\d.])\d+(?![pPeE.0-9])</string>
			<key>name</key>
			<string>constant.numeric.integer.fql</string>
		</dict>
		<dict>
			<key>match</key>
			<string>(?<![\w\d.])\d+(\.\d+)?([eE]-?\d*)?</string>
			<key>name</key>
			<string>constant.numeric.float.fql</string>
		</dict>
		<dict>
			<key>begin</key>
			<string>'</string>
			<key>beginCaptures</key>
			<dict>
				<key>0</key>
				<dict>
					<key>name</key>
					<string>punctuation.definition.string.begin.fql</string>
				</dict>
			</dict>
			<key>end</key>
			<string>'</string>
			<key>endCaptures</key>
			<dict>
				<key>0</key>
				<dict>
					<key>name</key>
					<string>punctuation.definition.string.end.fql</string>
				</dict>
			</dict>
			<key>name</key>
			<string>string.quoted.single.fql</string>
			<key>patterns</key>
			<array>
				<dict>
					<key>include</key>
					<string>#escaped_char</string>
				</dict>
			</array>
		</dict>
		<dict>
			<key>begin</key>
			<string>"</string>
			<key>beginCaptures</key>
			<dict>
				<key>0</key>
				<dict>
					<key>name</key>
					<string>punctuation.definition.string.begin.fql</string>
				</dict>
			</dict>
			<key>end</key>
			<string>"</string>
			<key>endCaptures</key>
			<dict>
				<key>0</key>
				<dict>
					<key>name</key>
					<string>punctuation.definition.string.end.fql</string>
				</dict>
			</dict>
			<key>name</key>
			<string>string.quoted.double.fql</string>
			<key>patterns</key>
			<array>
				<dict>
					<key>include</key>
					<string>#escaped_char</string>
				</dict>
			</array>
		</dict>
		<dict>
			<key>captures</key>
			<dict>
				<key>1</key>
				<dict>
					<key>name</key>
					<string>punctuation.definition.comment.fql</string>
				</dict>
			</dict>
			<key>match</key>
			<string>\A(#).*$\n?</string>
			<key>name</key>
			<string>comment.line.shebang.fql</string>
		</dict>
		<dict>
			<key>begin</key>
			<string>(^[ \t]+)?(?=#)</string>
			<key>beginCaptures</key>
			<dict>
				<key>1</key>
				<dict>
					<key>name</key>
					<string>punctuation.whitespace.comment.leading.fql</string>
				</dict>
			</dict>
			<key>end</key>
			<string>(?!\G)((?!^)[ \t]+\n)?</string>
			<key>endCaptures</key>
			<dict>
				<key>1</key>
				<dict>
					<key>name</key>
					<string>punctuation.whitespace.comment.trailing.fql</string>
				</dict>
			</dict>
			<key>patterns</key>
			<array>
				<dict>
					<key>begin</key>
					<string>#</string>
					<key>beginCaptures</key>
					<dict>
						<key>0</key>
						<dict>
							<key>name</key>
							<string>punctuation.definition.comment.fql</string>
						</dict>
					</dict>
					<key>end</key>
					<string>\n</string>
					<key>name</key>
					<string>comment.line.octothorpe.fql</string>
				</dict>
			</array>
		</dict>
		<dict>
			<key>match</key>
			<string>\b(If|Else|And|Or|For)\b</string>
			<key>name</key>
			<string>keyword.control.fql</string>
		</dict>
		<dict>
			<key>match</key>
			<string>(?<![^.]\.|:)\b(false|true)\b|(?<![.])\.{3}(?!\.)</string>
			<key>name</key>
			<string>constant.language.fql</string>
		</dict>
		<dict>
			<key>match</key>
			<string>(?<![^.]\.|:)\b(All|Any|Append|Count|Difference|Distinct|Drop|Filter|Foreach|Intersection|IsEmpty|IsNonEmpty|Map|Max|Mean|Min|Prepend|Reduce|Select|SelectAll|Sum|Take|ToObject|Union|CreateKey|HasIdentity|Identify|Identity|KeyFromSecret|Keys|Login|Logout|Tokens|At|Call|Do|If|Lambda|Let|Var|ToArray|ToDate|ToDouble|ToInteger|ToMicros|ToMillis|ToNumber|ToObject|ToSeconds|ToString|ToTime|Contains|Equals|Exists|GT|GTE|LT|LTE|Not|Or|Math|Abs|Acos|Add|Asin|Atan|BitAnd|BitNot|BitOr|BitXor|Ceil|Cos|Cosh|Count|Degrees|Divide|Exp|Floor|Hypot|Ln|Log|Max|Mean|Min|Modulo|Multiply|Pow|Radians|Round|Sign|Sin|Sinh|Sqrt|Subtract|Sum|Tan|Tanh|Trunc|Abort|Class|Classes|Collection|Collections|Database|Databases|Documents|Function|Functions|Index|Indexes|MoveDatabase|NewId|Query|Ref|Role|Roles|Merge|Select|SelectAll|ToArray|Get|KeyFromSecret|Paginate|Select|SelectAll|All|Any|Count|Difference|Distinct|Events|Filter|Intersection|IsEmpty|IsNonEmpty|Join|Match|Max|Mean|Min|Range|Reduce|Singleton|Sum|Union|Casefold|Concat|ContainsStr|ContainsStrRegex|EndsWith|FindStr|FindStrRegex|Format|LTrim|Length|LowerCase|RTrim|RegexEscape|Repeat|ReplaceStr|ReplaceStrRegex|Space|StartsWith|SubString|TitleCase|Trim|UpperCase|Events|Insert|Remove|Date|DayOfMonth|DayOfWeek|DayOfYear|Epoch|Hour|Minute|Month|Now|Second|Time|TimeAdd|TimeDiff|TimeSubtract|Year|IsArray|IsBoolean|IsBytes|IsCollection|IsCredentials|IsDatabase|IsDate|IsDoc|IsDouble|IsFunction|IsIndex|IsInteger|IsKey|IsLambda|IsNull|IsNumber|IsObject|IsRef|IsRole|IsSet|IsString|IsTimestamp|IsToken|Create|CreateClass|CreateCollection|CreateDatabase|CreateFunction|CreateIndex|CreateKey|CreateRole|Delete|Insert|Remove|Replace|Update)\b(?=\s*(?:[({"']|\[\[))</string>
			<key>name</key>
			<string>support.function.fql</string>
		</dict>
		<dict>
			<key>match</key>
			<string>(?<=[^.]\.|:)\b([a-zA-Z_][a-zA-Z0-9_]*)</string>
			<key>name</key>
			<string>variable.other.fql</string>
		</dict>
	</array>
	<key>repository</key>
	<dict>
		<key>escaped_char</key>
		<dict>
			<key>patterns</key>
			<array>
				<dict>
					<key>match</key>
					<string>\\[abfnrtvz\\"'\n]</string>
					<key>name</key>
					<string>constant.character.escape.fql</string>
				</dict>
				<dict>
					<key>match</key>
					<string>\\\d{1,3}</string>
					<key>name</key>
					<string>constant.character.escape.byte.fql</string>
				</dict>
				<dict>
					<key>match</key>
					<string>\\x[0-9A-Fa-f][0-9A-Fa-f]</string>
					<key>name</key>
					<string>constant.character.escape.byte.fql</string>
				</dict>
				<dict>
					<key>match</key>
					<string>\\u\{[0-9A-Fa-f]+\}</string>
					<key>name</key>
					<string>constant.character.escape.unicode.fql</string>
				</dict>
				<dict>
					<key>match</key>
					<string>\\.</string>
					<key>name</key>
					<string>invalid.illegal.character.escape.fql</string>
				</dict>
			</array>
		</dict>
	</dict>
	<key>scopeName</key>
	<string>source.fql</string>
	<key>uuid</key>
	<string>93E017CC-6F27-11D9-90EB-000D93589AF7</string>
</dict>
</plist>