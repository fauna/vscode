{
  "name": "fauna",
  "displayName": "Fauna",
  "description": "Fauna extension",
  "icon": "media/fauna-extension-logo.png",
  "version": "2.0.1",
  "publisher": "fauna",
  "engines": {
    "vscode": "^1.40.0"
  },
  "repository": {
    "type": "git",
    "url": "https://github.com/fauna/vscode.git"
  },
  "categories": [
    "Other"
  ],
  "activationEvents": [
    "onCommand:extension.helloWorld",
    "onCommand:fauna.runQuery",
    "onCommand:fauna.createQuery",
    "onCommand:fauna.uploadGraphQLSchema",
    "onCommand:fauna.mergeGraphQLSchema",
    "onCommand:fauna.overrideGraphQLSchema",
    "onView:fauna-databases"
  ],
  "main": "./out/extension.js",
  "contributes": {
    "configuration": {
      "title": "Fauna",
      "required": [
        "fauna.adminSecretKey"
      ],
      "properties": {
        "fauna.adminSecretKey": {
          "type": "string",
          "markdownDescription": "The secret for a specific database."
        },
        "fauna.domain": {
          "type": "string",
          "default": "db.fauna.com",
          "markdownDescription": "Optional - The Fauna domain for the database [Region Group](https://docs.fauna.com/fauna/current/learn/understanding/region_groups#how-to-use-region-groups) or `localhost` when using a local Fauna Dev Docker instance."
        },
        "fauna.scheme": {
          "type": "string",
          "default": "https",
          "enum": [
            "https",
            "http"
          ],
          "markdownDescription": "Optional - One of `https` or `http`. Only set to `http` when using a local Fauna Dev Docker instance."
        },
        "fauna.port": {
          "type": "number",
          "default": 443,
          "markdownDescription": "Optional - The port number for the Fauna endpoint. When using a Fauna Dev Docker instance, use the port passed to the `docker run` command - usually `8443`."
        },
        "fauna.graphqlHost": {
          "type": "string",
          "default": "https://graphql.fauna.com",
          "markdownDescription": "Optional - The full URL for the Fauna GraphQL API. The default is `https://graphql.fauna.com`. See [GraphQL Endpoints](https://docs.fauna.com/fauna/current/api/graphql/endpoints) for Region Group-specific URLs."
        }
      }
    },
    "languages": [
      {
        "id": "Log",
        "aliases": [
          "log"
        ],
        "extensions": [
          ".log"
        ],
        "configuration": "./log.configuration.json",
        "mimetypes": [
          "log",
          "text/log",
          "text/x-log",
          "text/x-code-output",
          "x-code-output"
        ]
      },
      {
        "id": "fql",
        "aliases": [
          "Fauna Query Language"
        ],
        "configuration": "./fql.configuration.json",
        "filenamePatterns": [
          "*.fql"
        ]
      }
    ],
    "grammars": [
      {
        "language": "Log",
        "scopeName": "code.log",
        "path": "./syntaxes/log.tmLanguage"
      },
      {
        "language": "fql",
        "scopeName": "source.fql",
        "path": "./syntaxes/fql.tmLanguage"
      }
    ],
    "commands": [
      {
        "command": "fauna.createQuery",
        "title": "Fauna: Create Query"
      },
      {
        "command": "fauna.uploadGraphQLSchema",
        "title": "Fauna: Upload GraphQL Schema"
      },
      {
        "command": "fauna.mergeGraphQLSchema",
        "title": "Fauna: Merge GraphQL Schema"
      },
      {
        "command": "fauna.overrideGraphQLSchema",
        "title": "Fauna: Override GraphQL Schema"
      },
      {
        "command": "fauna.runQuery",
        "title": "Fauna: Run Query"
      },
      {
        "command": "fauna.updateResource",
        "title": "Update Fauna Resource"
      },
      {
        "command": "fauna.settings",
        "title": "Settings",
        "icon": {
          "light": "media/settings.svg",
          "dark": "media/settings.svg"
        }
      },
      {
        "command": "fauna.delete",
        "title": "Delete",
        "icon": {
          "light": "media/delete.svg",
          "dark": "media/delete.svg"
        }
      },
      {
        "command": "fauna.refreshEntry",
        "title": "Refresh",
        "icon": {
          "light": "media/refresh.svg",
          "dark": "media/refresh.svg"
        }
      },
      {
        "command": "fauna.create",
        "title": "Create",
        "icon": {
          "light": "media/plus.svg",
          "dark": "media/plus.svg"
        }
      }
    ],
    "keybindings": [
      {
        "command": "fauna.runQuery",
        "key": "ctrl+enter",
        "mac": "cmd+enter",
        "when": "editorTextFocus && editorLangId == fql"
      },
      {
        "command": "fauna.updateResource",
        "key": "ctrl+s",
        "mac": "cmd+s",
        "when": "editorTextFocus && resourceDirname =~ /fauna-vscode-tmp/"
      }
    ],
    "viewsContainers": {
      "activitybar": [
        {
          "id": "fauna-explorer",
          "title": "Fauna",
          "icon": "media/fauna-logo.svg"
        }
      ]
    },
    "views": {
      "fauna-explorer": [
        {
          "id": "fauna-databases",
          "name": "Databases"
        },
        {
          "type": "webview",
          "id": "run-as",
          "name": "Run as"
        }
      ]
    },
    "menus": {
      "view/title": [
        {
          "command": "fauna.refreshEntry",
          "when": "view == fauna-databases",
          "group": "navigation"
        },
        {
          "command": "fauna.create",
          "when": "view == fauna-databases",
          "group": "navigation"
        }
      ],
      "view/item/context": [
        {
          "command": "fauna.settings",
          "when": "view == fauna-databases && viewItem != document",
          "group": "inline@1"
        },
        {
          "command": "fauna.delete",
          "when": "view == fauna-databases && viewItem == document",
          "group": "inline@1"
        }
      ]
    }
  },
  "scripts": {
    "vscode:prepublish": "yarn run compile",
    "compile": "tsc -p ./",
    "watch": "tsc -watch -p ./",
    "pretest": "yarn run compile",
    "test": "node ./out/test/runTest.js",
    "build": "yarn vsce package"
  },
  "devDependencies": {
    "@types/chai": "^4.2.14",
    "@types/glob": "^7.1.1",
    "@types/js-beautify": "^1.13.2",
    "@types/mocha": "^5.2.7",
    "@types/node": "^12.11.7",
    "@types/sinon": "^9.0.10",
    "@types/vscode": "^1.40.0",
    "chai": "^4.2.0",
    "glob": "^7.1.5",
    "husky": "^4.3.6",
    "mocha": "^6.2.3",
    "pretty-quick": "^3.1.0",
    "sinon": "^9.2.4",
    "tslint": "^5.20.0",
    "typescript": "^3.6.4",
    "vscode-test": "^1.5.2"
  },
  "dependencies": {
    "@types/highlight.js": "^9.12.3",
    "@types/node-fetch": "^2.5.7",
    "@types/prettier": "^2.1.6",
    "faunadb": "^4.5.4",
    "highlight.js": "^10.4.1",
    "js-beautify": "^1.14.0",
    "node-fetch": "^2.6.7",
    "prettier": "^2.2.1",
    "vsce": "^1.73.0"
  },
  "husky": {
    "hooks": {
      "pre-commit": "pretty-quick --staged"
    }
  }
}
